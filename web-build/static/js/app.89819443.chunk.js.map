{"version":3,"sources":["constants/colors.js","components/GridItem/styles.js","components/GridItem/GridItem.js","data/categories.js","screens/Home.js","components/BreadItem.js","data/breads.js","app/firebase.js","app/api.js","screens/Breads.js","app/Provider.js","screens/Detail.js","navigation/stacks/ShopNavigator.js","screens/Cart.js","navigation/stacks/CartNavigator.js","navigation/bottomtabs/TabsNavigator.js","screens/AuthScreen.js","navigation/index.js","App.js"],"names":["COLORS","styles","StyleSheet","create","container","height","flex","borderRadius","shadowColor","shadowOpacity","shadowOffset","width","shadowRadius","elevation","justifyContent","alignItems","padding","title","color","GridItem","item","onSelected","View","TouchableOpacity","onPress","style","backgroundColor","Text","CATEGORIES","id","btn","marginLeft","white","alignSelf","grid","flexDirection","Home","navigation","handleSelectedCategory","route","navigate","categoryId","name","data","numColumns","keyExtractor","renderItem","BreadItem","console","log","breadItem","tit","details","price","weight","margin","fontSize","BREADS","category","description","firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","db","getFirestore","auth","getAuth","setPersistence","browserLocalPersistence","itemsCollection","collection","ordersCollection","Breads","filter","bread","params","useState","products","setProducts","useEffect","a","async","getDocs","query","result","docs","map","doc","getItems","then","items","FlatList","handleSelected","Provider","children","productsInCart","state","setState","AppContext","value","addItem","newItem","quantity","find","removeItem","clear","isInCart","createContext","Detail","useContext","marginBottom","Stack","createStackNavigator","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","fontWeight","Screen","component","Cart","currentUser","u","order","buyer","email","total","reduce","acc","product","date","Date","toLocaleString","obj","orderProducts","addDoc","options","BottomTabs","createBottomTabNavigator","BTabs","headerShown","tabBarShowLabel","tabBarStyles","tabBar","ShopNavigator","tabBarIcon","focused","Ionicons","size","CartNavigator","position","bottom","left","right","AuthScreen","setEmail","password","setPassword","KeyboardAvoidingView","behavior","screen","label","TextInput","input","keyboardType","autoCapitalize","onChangeText","text","secureTextEntry","prompt","promptMessage","signInWithEmailAndPassword","userCredential","user","uid","catch","error","signIn","promptButton","createUserWithEmailAndPassword","setDoc","signUp","justifyContet","textAlign","maxWidth","borderColor","borderWidth","button","marginVertical","MainNavigator","isLogged","setIsLogged","onAuthStateChanged","NavigationContainer","TabsNavigator","App"],"mappings":"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","file":"static/js/app.89819443.chunk.js","sourcesContent":["export const COLORS = {\r\n    primary: '#2D93AD',\r\n    secondary: '#aac0af',\r\n}","import { StyleSheet } from 'react-native';\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        height: 150,\r\n        flex: 1,\r\n        borderRadius: 6,\r\n        shadowColor: 'black',\r\n        shadowOpacity: 0.26,\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowRadius: 6,\r\n        elevation: 3,\r\n        justifyContent: 'flex-end',\r\n        alignItems: 'flex-end',\r\n        padding: 0,\r\n    },\r\n    title: {\r\n        color: 'white'\r\n    }\r\n});\r\n\r\nexport default styles;","import React from 'react'\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\nimport styles from './styles'\r\n\r\n\r\nconst GridItem = ({ item, onSelected }) => {\r\n    return (<View>\r\n        <TouchableOpacity onPress={() => onSelected(item)}\r\n            style={{ ...styles.container, backgroundColor: item.color }}>\r\n            <View style={{ height: 150, width: 200, alignItems: 'center', justifyContent: 'center' }}>\r\n                <Text style={styles.title}>{item.title}</Text>\r\n            </View>\r\n        </TouchableOpacity>\r\n    </View>\r\n    )\r\n}\r\n\r\nexport default GridItem","export const CATEGORIES = [\r\n    {\r\n        id: 1,\r\n        title: 'Harinas Puras',\r\n        color: '#896978'\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'Harinas Integrales',\r\n        color: '#839791'\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'Panes Saborizados',\r\n        color: '#aac0af'\r\n    },\r\n    {\r\n        id: 4,\r\n        title: 'Otros Productos Panadería',\r\n        color: '#896978'\r\n    },\r\n]","import { StyleSheet, View, Text } from 'react-native';\r\nimport { FlatList, TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport GridItem from '../components/GridItem/GridItem';\r\nimport { CATEGORIES } from '../data/categories';\r\n\r\nconst Home = ({ navigation, route }) => {\r\n\r\n    const handleSelectedCategory = (item) => {\r\n        navigation.navigate('Breads', {\r\n            categoryId: item.id,\r\n            name: item.title\r\n        })\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <FlatList data={CATEGORIES} numColumns={2} keyExtractor={item => item.id}\r\n                renderItem={({ item }) => <GridItem key={item.id} item={item} onSelected={handleSelectedCategory} />} />\r\n\r\n\r\n\r\n        </View >\r\n    )\r\n}\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    btn: {\r\n        marginLeft: 20,\r\n        backgroundColor: 'gray',\r\n        padding: 10,\r\n        color: 'white',\r\n        borderRadius: 5\r\n    },\r\n    white: {\r\n        color: 'white'\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        alignSelf: 'stretch',\r\n    },\r\n    grid: {\r\n        flex: 1,\r\n        alignItems: 'stretch',\r\n        flexDirection: 'row',\r\n\r\n    }\r\n\r\n});\r\n\r\nexport default Home","import { View, Text } from \"react-native\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\"\r\nimport { StyleSheet } from \"react-native\";\r\n\r\nconst BreadItem = ({ item, onSelected }) => {\r\n    console.log(item)\r\n    return (\r\n        <TouchableOpacity onPress={() => onSelected(item)}>\r\n            <View style={styles.breadItem}>\r\n                <View>\r\n                    <Text style={styles.tit}>{item.title}</Text>\r\n                </View>\r\n                <View>\r\n                    <Text style={styles.details}>{item.price} $</Text>\r\n                    <Text style={styles.details}>{item.weight}</Text>\r\n                </View>\r\n            </View>\r\n        </TouchableOpacity>\r\n    )\r\n}\r\n\r\nexport default BreadItem;\r\n\r\nconst styles = StyleSheet.create({\r\n    breadItem: {\r\n        padding: 20,\r\n        margin: 10,\r\n        borderRadius: 3,\r\n        backgroundColor: '#ccc'\r\n    },\r\n    tit: {\r\n        fontSize: 20,\r\n    },\r\n    details: {\r\n        fontSize: 18\r\n    }\r\n})","export const BREADS = [\r\n    {\r\n        id: 1,\r\n        category: 1,\r\n        name: 'Pan Baguette',\r\n        description: 'Clásico pan francés',\r\n        weight: '350gr',\r\n        price: 1600\r\n    },\r\n    {\r\n        id: 2,\r\n        category: 1,\r\n        name: 'Pan Ciabatta Blanco',\r\n        description: 'Pan de alta hidratación, miga alveolada y corteza crujiente',\r\n        weight: '800gr',\r\n        price: 3000\r\n    },\r\n    {\r\n        id: 3,\r\n        category: 1,\r\n        name: 'Pan Hamburguesa',\r\n        description: 'Textura suave, decorado con semillas de sésamo tostadas',\r\n        weight: '120gr',\r\n        price: 500\r\n    },\r\n    {\r\n        id: 4,\r\n        category: 2,\r\n        name: 'Pan de molde Integral de Centeno',\r\n        description: 'Pídelo entero o tajado, con o sin semillas',\r\n        weight: '900gr',\r\n        price: 3300\r\n    },\r\n]","import { initializeApp } from 'firebase/app';\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { getAuth, setPersistence, browserLocalPersistence } from 'firebase/auth';\r\nimport { REACT_APP_PROJECT_ID, REACT_APP_API_KEY } from '@env'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: REACT_APP_API_KEY,\r\n    authDomain: REACT_APP_PROJECT_ID + '.firebaseapp.com',\r\n    projectId: REACT_APP_PROJECT_ID,\r\n    storageBucket: REACT_APP_PROJECT_ID + \".appspot.com\",\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\nexport const db = getFirestore();\r\nexport const auth = getAuth(firebaseApp);\r\n\r\n// Si descomentas la siguiente línea, cuando mientras que el usuario no se desloguee expresamente o cierre el navegador, permanecerá logueado y podremos acceder a su id desde cualquier página\r\nsetPersistence(auth, browserLocalPersistence);","import { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut } from \"firebase/auth\";\r\nimport { auth, db } from \"./firebase\";\r\nimport { setDoc, getDocs, query, collection, addDoc } from \"firebase/firestore\";\r\n\r\nconst collectionName = 'items';\r\nconst itemsCollection = collection(db, collectionName);\r\nconst ordersCollection = collection(db, 'orders');\r\n\r\n\r\nexport const signUp = async (email, password) => {\r\n    createUserWithEmailAndPassword(auth, email, password).then(async (userCredential) => {\r\n        const user = userCredential.user;\r\n        await setDoc(doc(db, 'users', user.uid));\r\n        return user.uid;\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n}\r\n\r\nexport const signIn = async (email, password) => {\r\n    return await signInWithEmailAndPassword(auth, email, password).then(async (userCredential) => {\r\n        const user = userCredential.user;\r\n        return user.uid;\r\n    })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const getCurrentUser = async () => await auth.currentUser;\r\nexport const logout = async () => await signOut(auth);\r\n\r\nexport const getItems = async () => {\r\n    const result = await getDocs(query(itemsCollection));\r\n    return result.docs.map(doc => {\r\n        return { ...doc.data(), id: doc.id };\r\n    });\r\n}\r\n\r\nexport const createOrder = (obj) => {\r\n    console.log('obj: ', { orderProducts: obj })\r\n    return addDoc(ordersCollection, { orderProducts: obj }).id;\r\n}","import { useContext, useEffect, useState } from \"react\";\r\nimport { View, Text, FlatList } from \"react-native\";\r\nimport BreadItem from \"../components/BreadItem\";\r\nimport { BREADS } from \"../data/breads\";\r\nimport { getItems } from '../app/api';\r\n\r\n\r\nconst Breads = ({ navigation, route }) => {\r\n    const breads = BREADS.filter(bread => bread.category === route.params.categoryId)\r\n    const [products, setProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getItems().then(items => {\r\n            setProducts(items);\r\n        });\r\n    }, [])\r\n\r\n    const handleSelected = (item) => {\r\n        navigation.navigate('Detail', {\r\n            bread: item\r\n        })\r\n    }\r\n    return (\r\n        <View>\r\n\r\n            <FlatList data={products} keyExtractor={item => item.id}\r\n                renderItem={({ item }) => <BreadItem item={item} onSelected={() => handleSelected(item)} />} />\r\n\r\n            <Text>{route.params.name}</Text>\r\n            <Text>{route.params.categoryId}</Text>\r\n\r\n        </View >\r\n    )\r\n}\r\n\r\nexport default Breads","import { createContext, useEffect, useState } from 'react';\r\nimport { getItems } from './api';\r\n\r\nconst Provider = ({ children }) => {\r\n    const [state, setState] = useState({ productsInCart: [] });\r\n\r\n    const addItem = (newItem, quantity) => {\r\n        !state.productsInCart.find(item => item.id === newItem.id) && setState({ ...state, productsInCart: [...state.productsInCart, newItem] });\r\n    };\r\n    const removeItem = id => {\r\n        setState(state.productsInCart.filter(item => item.id !== id));\r\n    };\r\n    const clear = () => setState({ ...state, productsInCart: [] });\r\n    const isInCart = (id) => state.productsInCart.find(item => item.id === id) ? true : false;\r\n\r\n\r\n\r\n\r\n    return (\r\n        <AppContext.Provider value={{ state, addItem, removeItem, clear, isInCart }}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    );\r\n}\r\n\r\nexport default Provider;\r\nexport const AppContext = createContext();  ","import { useContext } from \"react\";\r\nimport BreadItem from \"../components/BreadItem\"\r\nimport { StyleSheet, View, Text } from \"react-native\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport { AppContext } from \"../app/Provider\";\r\n\r\nconst Detail = ({ navigation, route }) => {\r\n    const bread = route.params.bread;\r\n    const { items, addItem, removeItem, clear } = useContext(AppContext);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>{bread.name}</Text>\r\n            <Text>{bread.description}</Text>\r\n            <Text>{bread.price}</Text>\r\n            <Text>{bread.weight}</Text>\r\n            <TouchableOpacity onPress={() => addItem(bread)}><Text>Add to Cart</Text></TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Detail;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    title: {\r\n        fontSize: 20,\r\n        marginBottom: 10\r\n    }\r\n\r\n});","import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Home from '../../screens/Home';\r\nimport Breads from '../../screens/Breads';\r\nimport Detail from '../../screens/Detail';\r\nimport { COLORS } from '../../constants/colors';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default () => (\r\n    <Stack.Navigator\r\n        screenOptions={{\r\n            headerStyle: {\r\n                backgroundColor: COLORS.primary\r\n            },\r\n            headerTintColor: COLORS.secondary,\r\n            headerTitleStyle: {\r\n                fontWeight: 'bold'\r\n            }\r\n\r\n        }}\r\n    >\r\n\r\n        <Stack.Screen name=\"Home\" component={Home} />\r\n        <Stack.Screen name=\"Breads\" component={Breads} />\r\n        <Stack.Screen name=\"Detail\" component={Detail} />\r\n\r\n    </Stack.Navigator>\r\n);","import React from 'react'\r\nimport { useContext } from \"react\";\r\nimport { AppContext } from '../app/Provider';\r\nimport { FlatList, Text, View } from 'react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { createOrder, getCurrentUser } from '../app/api';\r\n\r\nconst Cart = () => {\r\n    const { state, removeItem } = useContext(AppContext);\r\n\r\n\r\n    return (\r\n        <View>\r\n            <Text>Cart</Text>\r\n            <FlatList data={state.productsInCart} keyExtractor={item => item.id}\r\n                renderItem={({ item }) => <View style={{ marginBottom: 20 }}>\r\n                    <Text >{item.title}</Text>\r\n\r\n                    <TouchableOpacity onPress={() => removeItem(item.id)}><Text>Borrar</Text></TouchableOpacity>\r\n                </View>}\r\n            />\r\n\r\n            <TouchableOpacity onPress={async () => {\r\n                const u = await getCurrentUser();\r\n                console.log(u)\r\n                const order = {\r\n                    items: state.productsInCart,\r\n                    buyer: u.email,\r\n                    total: state.productsInCart.reduce((acc, product) => acc + product.price, 0),\r\n                    date: new Date().toLocaleString()\r\n                }\r\n                console.log(order)\r\n                createOrder(order);\r\n\r\n            }}><Text>Make order</Text></TouchableOpacity>\r\n        </View >\r\n    )\r\n}\r\n\r\nexport default Cart","import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Home from '../../screens/Cart';\r\nimport { COLORS } from '../../constants/colors';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default () => (\r\n    <Stack.Navigator\r\n        screenOptions={{\r\n            headerStyle: {\r\n                backgroundColor: COLORS.primary\r\n            },\r\n            headerTintColor: COLORS.secondary,\r\n            headerTitleStyle: {\r\n                fontWeight: 'bold'\r\n            }\r\n\r\n        }}\r\n    >\r\n\r\n        <Stack.Screen name=\"Cart\" component={Home} options={{ title: 'Carrito' }} />\r\n\r\n\r\n    </Stack.Navigator>\r\n);","import React from 'react';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { COLORS } from '../../constants/colors';\r\nimport { View, Text } from 'react-native';\r\nimport ShopNavigator from '../stacks/ShopNavigator';\r\nimport CartNavigator from '../stacks/CartNavigator';\r\nimport { StyleSheet } from 'react-native';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\n\r\nconst BottomTabs = createBottomTabNavigator();\r\n\r\nconst BTabs = () => (\r\n    <BottomTabs.Navigator\r\n        screenOptions={{\r\n            headerStyle: {\r\n                backgroundColor: COLORS.primary\r\n            },\r\n            headerShown: false,\r\n            tabBarShowLabel: true,\r\n            tabBarStyles: styles.tabBar,\r\n            headerTintColor: COLORS.secondary,\r\n            headerTitleStyle: {\r\n                fontWeight: 'bold'\r\n            }\r\n        }}\r\n    >\r\n\r\n        <BottomTabs.Screen name=\"ShopTab\" component={ShopNavigator}\r\n\r\n            options={{\r\n                tabBarIcon: ({ focused }) => <Ionicons name=\"md-home\" size={30} color=\"#900\" />,\r\n                title: \"Shop\"\r\n            }}\r\n\r\n\r\n        />\r\n        <BottomTabs.Screen name=\"CartTab\" component={CartNavigator}\r\n\r\n            options={{\r\n                tabBarIcon: ({ focused }) => <Ionicons name=\"md-cart\" size={30} color=\"#900\" />,\r\n                title: 'cart'\r\n            }}\r\n\r\n        />\r\n\r\n    </BottomTabs.Navigator >\r\n);\r\n\r\n\r\nexport default BTabs;\r\n\r\nconst styles = StyleSheet.create({\r\n    tabBar: {\r\n        shadowColor: '#7f5df0',\r\n        shadowOffset: { width: 0, height: 0 },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 0.25,\r\n        elevation: 5,\r\n        position: 'absolute',\r\n        bottom: 25,\r\n        left: 20,\r\n        right: 20,\r\n        borderRadius: 15,\r\n        height: 90\r\n    },\r\n    item: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    }\r\n})","import React, { useState } from 'react'\r\nimport { KeyboardAvoidingView, StyleSheet, TouchableOpacity, View, Text, TextInput } from 'react-native';\r\nimport { signUp, signIn } from '../app/api';\r\nimport { COLORS } from '../constants/colors';\r\n\r\nconst title = 'REGISTRO',\r\n    message = '¿Ta tienes una cuenta?',\r\n    messageAction = 'Ingresar',\r\n    messageTarget = 'login';\r\n\r\nconst AuthScreen = () => {\r\n    const [isSignUp, setIsSignUp] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    return (\r\n        <KeyboardAvoidingView\r\n            behavior=\"height\"\r\n            style={styles.screen}\r\n        >\r\n            <View style={styles.container}>\r\n                <Text style={styles.title}>\r\n                    {title}\r\n                </Text>\r\n                <Text style={styles.label}>Email</Text>\r\n                <TextInput style={styles.input} keyboardType=\"email-address\" autoCapitalize=\"none\" onChangeText={text => setEmail(text)} />\r\n                <Text style={styles.label} >Clave</Text>\r\n                <TextInput style={styles.input} secureTextEntry autoCapitalize=\"none\" onChangeText={text => setPassword(text)} />\r\n\r\n                <View style={styles.prompt}>\r\n                    <Text style={styles.promptMessage}>\r\n                        {message}\r\n                    </Text>\r\n                    <TouchableOpacity onPress={() => signIn(email, password)}>\r\n                        <Text style={styles.promptButton}>\r\n                            {messageAction}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <TouchableOpacity onPress={() => signUp(email, password)}><Text>Sign Up</Text></TouchableOpacity>\r\n            </View>\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default AuthScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        justifyContet: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginBottom: 18,\r\n        textAlign: 'center'\r\n    },\r\n    container: {\r\n        width: '80%',\r\n        maxWidth: 400,\r\n        padding: 12,\r\n        margin: 12,\r\n        borderColor: '#ccc',\r\n        borderWidth: 1,\r\n        borderRadius: 10,\r\n        backgroundColor: 'white'\r\n    },\r\n    prompt: {\r\n        alignItems: 'center',\r\n    },\r\n    promptMessage: {\r\n        fontSize: 16,\r\n        color: '#333'\r\n    },\r\n    promptButton: {\r\n        fontSize: 16,\r\n        color: COLORS.primary\r\n    },\r\n    button: {\r\n        backgroundColor: COLORS.primary,\r\n        marginVertical: 20\r\n    },\r\n    label: {\r\n\r\n    },\r\n    input: {\r\n        borderColor: '#ccc',\r\n        borderWidth: 1,\r\n        borderRadius: 10,\r\n        padding: 12,\r\n        marginVertical: 12,\r\n        fontSize: 16,\r\n        color: '#333',\r\n        backgroundColor: '#eee',\r\n        width: '100%'\r\n\r\n    }\r\n})","import React, { useEffect, useState } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport TabsNavigator from './bottomtabs/TabsNavigator';\r\nimport { onAuthStateChanged } from 'firebase/auth';\r\nimport { auth } from '../app/firebase';\r\nimport AuthScreen from '../screens/AuthScreen';\r\n\r\nconst MainNavigator = () => {\r\n    const [isLogged, setIsLogged] = useState(false);\r\n\r\n    useEffect(() => {\r\n        onAuthStateChanged(auth, user => {\r\n            if (user) {\r\n                console.log('user', user);\r\n                const uid = user.uid;\r\n                setIsLogged(true);\r\n            } else {\r\n                console.log(\"No user logged\");\r\n                setIsLogged(false);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (<NavigationContainer>\r\n        {isLogged ?\r\n            <TabsNavigator /> :\r\n            <AuthScreen />\r\n        }\r\n    </NavigationContainer>)\r\n\r\n}\r\n\r\nexport default MainNavigator;","import 'dotenv/config';\nimport MainNavigator from './navigation';\nimport Provider from './app/Provider';\n\n\nconst App = () => <Provider><MainNavigator /></Provider>\n\nexport default App; "],"sourceRoot":""}